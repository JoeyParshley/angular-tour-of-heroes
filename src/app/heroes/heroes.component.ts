// Always import the Component symbol from the Angular core library and annotate the component class with @Component
import { Component, OnInit } from '@angular/core';
// import Hero interface
import { Hero} from '../hero';
// import the mock HEROES
import {  HeroService } from '../hero.service';
// import { HEROES } from '../mock-heroes';


// three metadata properties generated by the CLI --- CSS selector, and location of the components template and css
@Component({
  selector: 'app-heroes',
  templateUrl: './heroes.component.html',
  styleUrls: ['./heroes.component.css']
})

// Angular calls ngOjnInit() shortly after creating a component GOOD PLACE FOR INITIALIZATION CODE
// return hero property of type Hero initialized with id of 1 and name `Windstorm`
export class HeroesComponent implements OnInit {

  // define a component property called heroes to expose the HEROES array for binding.
  heroes: Hero[] = [];
  selectedHero?: Hero;

  // add a private heroService parameter of type HeroService to the constructor
  // to define the private heroService propery and identify it has a HeroService injection site
  // When angulare creates a HeroesComponent the Dependecy Injection system sets the heroService
  // parameter to the singleton instance of HeroService
  constructor(private heroService: HeroService) { }

  ngOnInit() {
    this.getHeroes();
  }
  // define an onSelect() method in HeroesComponent to display the hero that was defined in the *ngFor expression.
  onSelect(hero: Hero): void {
    this.selectedHero = hero;
  }

  getHeroes(): void {
    this.heroes = this.heroService.getHeroes();
  }

}
